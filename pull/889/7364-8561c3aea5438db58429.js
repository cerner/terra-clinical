"use strict";(self.webpackChunkterra_clinical=self.webpackChunkterra_clinical||[]).push([[7364],{49271:function(e,t,l){var n=l(64836),a=l(18698);t.Z=void 0;var s=n(l(27424)),r=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==a(e)&&"function"!=typeof e)return{default:e};var l=f(t);if(l&&l.has(e))return l.get(e);var n={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var o=s?Object.getOwnPropertyDescriptor(e,r):null;o&&(o.get||o.set)?Object.defineProperty(n,r,o):n[r]=e[r]}n.default=e,l&&l.set(e,n);return n}(l(67294)),o=n(l(45697)),i=n(l(47166)),u=l(21538),m=n(l(33864)),c=n(l(23399)),d=l(51051),p=n(l(53560));function f(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(f=function(e){return e?l:t})(e)}var h=i.default.bind(p.default),v={example:o.default.element,exampleSrc:o.default.element,exampleCssSrc:o.default.element,title:o.default.string,description:o.default.node,isExpanded:o.default.bool},w=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","true")},y=function(e){e.currentTarget.setAttribute("data-focus-styles-enabled","false")},x=function(e){var t=e.example,l=e.exampleSrc,n=e.exampleCssSrc,a=e.title,o=e.description,i=e.isExpanded,p=(0,r.useState)(i),f=(0,s.default)(p,2),v=f[0],x=f[1],g=(0,r.useState)(!1),C=(0,s.default)(g,2),b=C[0],R=C[1],N=r.default.useContext(u.ThemeContext),E=void 0!==n,k=function(){R(!b),v&&x(!v)},S=function(){x(!v),b&&R(!b)},D=function(e,t){e.nativeEvent.keyCode!==d.KEY_SPACE&&e.nativeEvent.keyCode!==d.KEY_RETURN||(e.preventDefault(),t())};return r.default.createElement("div",{className:h("template",N.className)},r.default.createElement("div",{className:h("header")},a&&r.default.createElement("h2",{className:h("title")},a)),r.default.createElement("div",{className:h("content")},o&&r.default.createElement("div",{className:h("description")},o),t),r.default.createElement("div",{className:h("footer")},l?r.default.createElement("div",{className:h("button-container")},E&&r.default.createElement("button",{type:"button",className:h("css-toggle","item",{"is-selected":b}),onClick:k,onKeyDown:function(e){return D(e,k)},onBlur:w,onMouseDown:y,tabIndex:0,"data-focus-styles-enabled":!0},r.default.createElement(m.default,{className:h("chevron")}),r.default.createElement("span",null,"CSS"),r.default.createElement(c.default,{className:h("chevron")})),r.default.createElement("button",{type:"button",className:h("code-toggle","item",{"is-selected":v}),onClick:S,onKeyDown:function(e){return D(e,S)},onBlur:w,onMouseDown:y,tabIndex:0,"data-focus-styles-enabled":!0},r.default.createElement(m.default,{className:h("chevron")}),r.default.createElement("span",null,"Code"),r.default.createElement(c.default,{className:h("chevron")}))):null,r.default.createElement("div",null,b&&r.default.createElement("div",{className:h("css")},n),v&&r.default.createElement("div",{className:h("code")},l))))};x.propTypes=v,x.defaultProps={isExpanded:!1};var g=x;t.Z=g},7364:function(e,t,l){l.r(t),l.d(t,{default:function(){return Ye}});var n=l(67294),a=l(81254),s=l(61042),r=l(62086),o=["components"];function i(){return i=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},i.apply(this,arguments)}function u(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var m={};function c(e){var t=e.components,l=u(e,o);return(0,a.mdx)("wrapper",i({},m,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\n\nconst singleResultValue = [\n  {\n    eventId: '111',\n    result: {\n      value: '12345.678',\n      unit: 'mL',\n    },\n    isModified: true,\n    hasComment: true,\n  },\n];\n\nexport default () => <FlowsheetResultCell resultDataSet={singleResultValue} />;\n\n")))}c.isMDXComponent=!0;var d=l(49271),p=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Default",description:l,example:n.createElement(r.Z,null),exampleSrc:n.createElement(c,null),isExpanded:a})},f=l(59763),h=["components"];function v(){return v=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},v.apply(this,arguments)}function w(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var y={};function x(e){var t=e.components,l=w(e,h);return(0,a.mdx)("wrapper",v({},y,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultValues = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n    </div>\n  );\n};\n\n")))}x.isMDXComponent=!0;var g=l(52636),C=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Multiple Results",description:l,example:n.createElement(f.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(x,null),isExpanded:a})},b=l(92452),R=["components"];function N(){return N=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},N.apply(this,arguments)}function E(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var k={};function S(e){var t=e.components,l=E(e,R);return(0,a.mdx)("wrapper",N({},k,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst bloodpressureResultValue = [\n  {\n    id: '111',\n    systolic: {\n      eventId: '111.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n    diastolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n    },\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={bloodpressureResultValue} hideUnit />\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n    </div>\n  );\n};\n\n")))}S.isMDXComponent=!0;var D=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Blood Pressure",description:l,example:n.createElement(b.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(S,null),isExpanded:a})},_=l(96612),O=["components"];function F(){return F=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},F.apply(this,arguments)}function j(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var I={};function M(e){var t=e.components,l=j(e,O);return(0,a.mdx)("wrapper",F({},I,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultBPValues = [\n  {\n    id: '1602328271-1',\n    systolic: {\n      eventId: '1602328271-1.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-1.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-2',\n    systolic: {\n      eventId: '1602328271-2.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-2.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-3',\n    systolic: {\n      eventId: '1602328271-3.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-3.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit />\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n    </div>\n  );\n};\n\n")))}M.isMDXComponent=!0;var T=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Multiple Blood Pressures",description:l,example:n.createElement(_.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(M,null),isExpanded:a})},P=l(71924),H=["components"];function U(){return U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},U.apply(this,arguments)}function B(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var Z={};function V(e){var t=e.components,l=B(e,H);return(0,a.mdx)("wrapper",U({},Z,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst unverifiedResultValue = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    interpretation: 'critical',\n    isUnverified: true,\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit />\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'empty'])} />\n      </div>\n    </div>\n  );\n};\n\n")))}V.isMDXComponent=!0;var X=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Unverified Results",description:l,example:n.createElement(P.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(V,null),isExpanded:a})},W=l(14211),L=["components"];function z(){return z=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},z.apply(this,arguments)}function q(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var A={};function K(e){var t=e.components,l=q(e,L);return(0,a.mdx)("wrapper",z({},A,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultBPValues = [\n  {\n    id: '1602328271-1',\n    systolic: {\n      eventId: '1602328271-1.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-1.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-2',\n    systolic: {\n      eventId: '1602328271-2.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-2.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-3',\n    systolic: {\n      eventId: '1602328271-3.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-3.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nconst unverifiedResultValue = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isUnverified: true,\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'short'])}>\n          none\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'with-padding'])}>\n          compact\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'with-padding', 'medium'])}>\n          standard\n        </div>\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'short'])}>\n          <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"none\" />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"compact\" />\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'medium'])}>\n          <FlowsheetResultCell resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"standard\" />\n        </div>\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'short'])}>\n          <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"none\" />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"compact\" />\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'medium'])}>\n          <FlowsheetResultCell resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"standard\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n")))}K.isMDXComponent=!0;var G=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Padding Style",description:l,example:n.createElement(W.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(K,null),isExpanded:a})},Y=l(72538),J=["components"];function Q(){return Q=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Q.apply(this,arguments)}function $(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var ee={};function te(e){var t=e.components,l=$(e,J);return(0,a.mdx)("wrapper",Q({},ee,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst partialResultValueWithNoDataPropSystolic = [\n  {\n    id: '111',\n    systolic: {\n      eventId: '111.1',\n      resultNoData: true,\n    },\n    diastolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst partialResultValueWithNoDataPropDiastolic = [\n  {\n    id: '222',\n    systolic: {\n      eventId: '222.1',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '222.2',\n      resultNoData: true,\n    },\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      {/* This example column shows a standard result with the `hasResultNoData` prop or `result: { value: null, }` */}\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell hasResultNoData />\n        </div>\n      </div>\n      {/* This example column shows a partial Blood Pressure no data display using the `resultNoData` property name */}\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={partialResultValueWithNoDataPropSystolic} hideUnit />\n        </div>\n      </div>\n      {/* This example column shows a partial Blood Pressure no data display using `result: { value: null, }` */}\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={partialResultValueWithNoDataPropDiastolic} hideUnit />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n")))}te.isMDXComponent=!0;var le=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Known And Partial No Data",description:l,example:n.createElement(Y.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(te,null),isExpanded:a})},ne=l(93429),ae=["components"];function se(){return se=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},se.apply(this,arguments)}function re(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var oe={};function ie(e){var t=e.components,l=re(e,ae);return(0,a.mdx)("wrapper",se({},oe,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst partialResultValueWithNoSystolic = [\n  {\n    id: '111',\n    diastolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst partialResultValueWithNoDiastolic = [\n  {\n    id: '222',\n    systolic: {\n      eventId: '222.1',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      {/* This example column shows how to use the `hasResultError` prop */}\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell hasResultError />\n        </div>\n      </div>\n      {/* This example column shows the error display when the Systolic property name is not present */}\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={partialResultValueWithNoSystolic} hideUnit />\n        </div>\n      </div>\n      {/* This example column shows the error display when the Diastolic property name is not present */}\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={partialResultValueWithNoDiastolic} hideUnit />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n")))}ie.isMDXComponent=!0;var ue=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Known Error And Partial Error",description:l,example:n.createElement(ne.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(ie,null),isExpanded:a})},me=l(79314),ce=["components"];function de(){return de=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},de.apply(this,arguments)}function pe(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var fe={};function he(e){var t=e.components,l=pe(e,ce);return(0,a.mdx)("wrapper",de({},fe,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst multipleResultValues = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.123456789123456789123456789123456789123456789',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n      </div>\n      <div className={cx(['mock-flowsheet-resultcolumn', 'half-column'])}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n      </div>\n      <div className={cx(['mock-flowsheet-resultcolumn', 'triple-column'])}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={multipleResultValues} hideUnit />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n")))}he.isMDXComponent=!0;var ve=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Numeric Overflow",description:l,example:n.createElement(me.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(he,null),isExpanded:a})},we=l(63216),ye=["components"];function xe(){return xe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},xe.apply(this,arguments)}function ge(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var Ce={};function be(e){var t=e.components,l=ge(e,ye);return(0,a.mdx)("wrapper",xe({},Ce,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\nimport classNames from 'classnames';\nimport classNamesBind from 'classnames/bind';\nimport ThemeContext from 'terra-theme-context';\nimport styles from '../Examples.module.scss';\n\nconst cx = classNamesBind.bind(styles);\n\nconst partialStandard = {\n  result: {\n    value: '12345.678',\n    unit: 'mL',\n  },\n};\n\nconst partialSystolic = {\n  eventId: '1602328271.1',\n  result: {\n    value: '120',\n    unit: 'mmHg',\n  },\n};\n\nconst partialDiastolic = {\n  eventId: '1602328271.2',\n  result: {\n    value: '80',\n    unit: 'mmHg',\n  },\n};\n\nconst standardInError = [\n  {\n    eventId: '1577836800',\n    ...partialStandard,\n    status: 'entered-in-error',\n  },\n  {\n    eventId: '1577836911',\n    ...partialStandard,\n  },\n];\n\nconst bloodpressureOneInError = [\n  {\n    id: '111',\n    systolic: {\n      ...partialSystolic,\n      status: 'entered-in-error',\n    },\n    diastolic: {\n      ...partialDiastolic,\n    },\n  },\n  {\n    id: '112',\n    systolic: {\n      ...partialSystolic,\n    },\n    diastolic: {\n      ...partialDiastolic,\n    },\n  },\n];\n\nconst bloodpressureBothInError = [\n  {\n    id: '211',\n    systolic: {\n      ...partialSystolic,\n      status: 'entered-in-error',\n    },\n    diastolic: {\n      ...partialDiastolic,\n      status: 'entered-in-error',\n    },\n  },\n  {\n    id: '212',\n    systolic: {\n      ...partialSystolic,\n    },\n    diastolic: {\n      ...partialDiastolic,\n    },\n  },\n];\n\nexport default () => {\n  const theme = React.useContext(ThemeContext);\n  const mockFlowsheetClassnames = classNames(\n    cx(\n      'mock-flowsheet-example',\n      theme.className,\n    ),\n  );\n\n  return (\n    <div className={mockFlowsheetClassnames}>\n      <div className={cx(['mock-flowsheet-resultcolumn', 'double-column'])}>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'with-padding'])}>\n          standard result\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'wide', 'with-padding'])}>\n          blood pressure: systolic-only\n        </div>\n        <div className={cx(['mock-flowsheet-resultcolumn-cell', 'wide', 'with-padding'])}>\n          blood pressure: both systolic & diastolic\n        </div>\n      </div>\n      <div className={cx('mock-flowsheet-resultcolumn')}>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={standardInError} hideUnit />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={bloodpressureOneInError} hideUnit />\n        </div>\n        <div className={cx('mock-flowsheet-resultcolumn-cell')}>\n          <FlowsheetResultCell resultDataSet={bloodpressureBothInError} hideUnit />\n        </div>\n      </div>\n    </div>\n  );\n};\n\n")))}be.isMDXComponent=!0;var Re=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Status Entered In Error",description:l,example:n.createElement(we.Z,null),exampleCssSrc:n.createElement(g.Z,null),exampleSrc:n.createElement(be,null),isExpanded:a})},Ne=l(67479),Ee=["components"];function ke(){return ke=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},ke.apply(this,arguments)}function Se(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var De={};function _e(e){var t=e.components,l=Se(e,Ee);return(0,a.mdx)("wrapper",ke({},De,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\n\nconst defaultBloodPressureResult = [\n  {\n    id: '1',\n    systolic: {\n      eventId: '2',\n      result: {\n        value: '130',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '3',\n      result: {\n        value: '80',\n        unit: 'mmHg',\n      },\n    },\n  },\n];\n\nconst multipleResults = [\n  {\n    id: '4',\n    systolic: {\n      eventId: '5',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '6',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n  {\n    id: '7',\n    systolic: {\n      eventId: '8',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '9',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst numericResultsNoOverflow = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nconst numericResultsOverflow = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '10111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: true,\n    hasComment: true,\n  },\n  {\n    eventId: '1602328282',\n    result: {\n      value: '101.2',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n  {\n    eventId: '1602328293',\n    result: {\n      value: '101.3',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isModified: false,\n    hasComment: false,\n  },\n];\n\nconst multipleDecoratedResults = [\n  {\n    id: '10',\n    systolic: {\n      eventId: '11',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '12',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n      isUnverified: false,\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '13',\n    systolic: {\n      eventId: '14',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n    },\n    diastolic: {\n      eventId: '15',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n      isUnverified: true,\n    },\n  },\n];\n\nconst decoratedResult = [\n  {\n    id: '16',\n    systolic: {\n      eventId: '17',\n      result: {\n        value: '85',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n    },\n    diastolic: {\n      eventId: '18',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isUnverified: false,\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nconst partialResultWithNoDataPropSystolic = [\n  {\n    id: '19',\n    systolic: {\n      eventId: '20',\n      resultNoData: true,\n    },\n    diastolic: {\n      eventId: '21',\n      result: {\n        value: '85',\n        unit: 'mmHg',\n      },\n    },\n  },\n];\n\nconst partialResultWithNoDataPropDiastolic = [\n  {\n    id: '22',\n    systolic: {\n      eventId: '23',\n      result: {\n        value: '170',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n    diastolic: {\n      eventId: '24',\n      resultNoData: true,\n    },\n  },\n];\n\nconst partialResultError = [\n  {\n    id: '111',\n    systolic: {\n      eventId: '111.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n    },\n  },\n];\n\nconst unverifiedResult = [\n  {\n    id: '25',\n    systolic: {\n      eventId: '26',\n      result: {\n        value: '140',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isUnverified: true,\n    },\n    diastolic: {\n      eventId: '27',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'critical',\n      isUnverified: true,\n    },\n  },\n];\n\nconst enteredInError = [\n  {\n    id: '1577836800',\n    result: {\n      value: '12345.678',\n      unit: 'mL',\n    },\n    status: 'entered-in-error',\n  },\n  {\n    id: '1577836911',\n    result: {\n      value: '12345.678',\n      unit: 'mL',\n    },\n  },\n];\n\nexport default () => (\n  <Table>\n    <Header>\n      <ResultNameHeaderCell key=\"notes\" resultName=\"Notes\" />\n      <ResultNameHeaderCell key=\"result\" resultName=\"Clinical Results\" />\n      <ResultNameHeaderCell key=\"date\" resultName=\"Date\" />\n    </Header>\n    <Body>\n      <Row>\n        {/* This example cell shows a standard result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 1, result: { value: 'Standard Result (With Unit)' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={defaultBloodPressureResult} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 2, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple results */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 3, result: { value: 'Multiple Results' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={multipleResults} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 4, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple decorated results */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 5, result: { value: 'Multiple Decorated Results' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={multipleDecoratedResults} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 6, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a decorated result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 7, result: { value: 'Decorated Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={decoratedResult} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 8, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a partial Blood Pressure no data display using the `resultNoData` property name for the Diastolic result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 9, result: { value: 'Partial Result, Diastolic' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={partialResultWithNoDataPropDiastolic} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 10, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a partial Blood Pressure no data display using the `resultNoData` property name for the Systolic result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 11, result: { value: 'Partial Result, Systolic' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={partialResultWithNoDataPropSystolic} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 12, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows an unverified result */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 13, result: { value: 'Unverified Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={unverifiedResult} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 14, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a standard result with the `hasResultNoData` prop */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 15, result: { value: 'No Data Result' } }]} />\n        <FlowsheetResultCell key=\"result\" hasResultNoData />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 16, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple numeric results without overflow present */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 23, result: { value: 'Numeric Without Overflow' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={numericResultsNoOverflow} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 24, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows multiple numeric results with overflow present */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 25, result: { value: 'Numeric With Overflow' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={numericResultsOverflow} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 26, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a result with a status of entered-in-error */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 21, result: { value: 'Entered-in-error Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={enteredInError} />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 22, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a result with an error */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 17, result: { value: 'Error Result' } }]} />\n        <FlowsheetResultCell key=\"result\" hasResultError />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 18, result: { value: 'May 12th' } }]} />\n      </Row>\n      <Row>\n        {/* This example cell shows a result with a partial error */}\n        <FlowsheetResultCell key=\"notes\" resultDataSet={[{ id: 19, result: { value: 'Partial Error Result' } }]} />\n        <FlowsheetResultCell key=\"result\" resultDataSet={partialResultError} hideUnit />\n        <FlowsheetResultCell key=\"date\" resultDataSet={[{ id: 20, result: { value: 'May 12th' } }]} />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}_e.isMDXComponent=!0;var Oe=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Semantic Table Example",description:l,example:n.createElement(Ne.Z,null),exampleSrc:n.createElement(_e,null),isExpanded:a})},Fe=l(90296),je=["components"];function Ie(){return Ie=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Ie.apply(this,arguments)}function Me(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var Te={};function Pe(e){var t=e.components,l=Me(e,je);return(0,a.mdx)("wrapper",Ie({},Te,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { FlowsheetResultCell, ResultNameHeaderCell } from 'terra-clinical-result/lib/index';\nimport Table, {\n  Header,\n  Row,\n  Body,\n} from 'terra-html-table';\n\nconst multipleResultBPValues = [\n  {\n    id: '1602328271-1',\n    systolic: {\n      eventId: '1602328271-1.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-1.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-2',\n    systolic: {\n      eventId: '1602328271-2.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      interpretation: 'high',\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-2.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      interpretation: 'low',\n      isModified: true,\n      hasComment: true,\n    },\n  },\n  {\n    id: '1602328271-3',\n    systolic: {\n      eventId: '1602328271-3.1',\n      result: {\n        value: '111',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n    diastolic: {\n      eventId: '1602328271-3.2',\n      result: {\n        value: '77',\n        unit: 'mmHg',\n      },\n      isModified: true,\n      hasComment: true,\n    },\n  },\n];\n\nconst unverifiedResultValue = [\n  {\n    eventId: '1602328271',\n    result: {\n      value: '101.1',\n      unit: 'degC',\n    },\n    isNumeric: true,\n    isUnverified: true,\n  },\n];\n\nexport default () => (\n  <Table>\n    <Header>\n      <ResultNameHeaderCell key=\"padding\" resultName=\"Padding Type\" />\n      <ResultNameHeaderCell key=\"bp\" resultName=\"Blood Pressure Result\" />\n      <ResultNameHeaderCell key=\"temp\" resultName=\"Unverified Temperature Result\" />\n    </Header>\n    <Body>\n      <Row>\n        {/* This example cell shows results with no padding style */}\n        <FlowsheetResultCell key=\"padding\" resultDataSet={[{ id: 1, result: { value: 'None' } }]} paddingStyle=\"none\" />\n        <FlowsheetResultCell key=\"bp\" resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"none\" />\n        <FlowsheetResultCell key=\"temp\" resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"none\" />\n      </Row>\n      <Row>\n        {/* This example cell shows results with a compact padding style */}\n        <FlowsheetResultCell key=\"padding\" resultDataSet={[{ id: 3, result: { value: 'Compact' } }]} paddingStyle=\"compact\" />\n        <FlowsheetResultCell key=\"bp\" resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"compact\" />\n        <FlowsheetResultCell key=\"temp\" resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"compact\" />\n      </Row>\n      <Row>\n        {/* This example cell shows results with a standard padding style */}\n        <FlowsheetResultCell key=\"padding\" resultDataSet={[{ id: 5, result: { value: 'Standard' } }]} paddingStyle=\"standard\" />\n        <FlowsheetResultCell key=\"bp\" resultDataSet={multipleResultBPValues} hideUnit paddingStyle=\"standard\" />\n        <FlowsheetResultCell key=\"temp\" resultDataSet={unverifiedResultValue} hideUnit paddingStyle=\"standard\" />\n      </Row>\n    </Body>\n  </Table>\n);\n\n")))}Pe.isMDXComponent=!0;var He=function(e){var t=e.title,l=e.description,a=e.isExpanded;return n.createElement(d.Z,{title:t||"Flowsheet Result Cell Padding Style Semantic Example",description:l,example:n.createElement(Fe.Z,null),exampleSrc:n.createElement(Pe,null),isExpanded:a})},Ue=l(78530),Be=["components"];function Ze(){return Ze=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},Ze.apply(this,arguments)}function Ve(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var Xe={},We="wrapper";function Le(e){var t=e.components,l=Ve(e,Be);return(0,a.mdx)(We,Ze({},Xe,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)(Ue.ZP,{mdxType:"PropsTable"},(0,a.mdx)(Ue.X2,{key:"ROW1",mdxType:"Row"},(0,a.mdx)(Ue.O,{mdxType:"PropNameCell"},"resultDataSet"),(0,a.mdx)(Ue.Di,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"arrayOf: [{\n  shape: {\n    id: {\n      type: 'string',\n      description: 'A single clinical result or blood pressure result id.',\n    },\n    resultData: {\n      type: 'custom',\n      description: 'A single clinical result or blood pressure result.',\n    },\n  },\n}],\n"))),(0,a.mdx)(Ue.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(Ue.mW,{mdxType:"DefaultValueCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"[]\n"))),(0,a.mdx)(Ue.Ex,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,"A set of clinical results. Example object structure listed above.                                              ."))),(0,a.mdx)(Ue.X2,{key:"ROW2",mdxType:"Row"},(0,a.mdx)(Ue.O,{mdxType:"PropNameCell"},"hideUnit"),(0,a.mdx)(Ue.Di,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,a.mdx)(Ue.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(Ue.mW,{mdxType:"DefaultValueCell"},(0,a.mdx)("p",null,"none")),(0,a.mdx)(Ue.Ex,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,"Visually hides the unit of measure when presented in a series of side-by-side columns of the same unit."))),(0,a.mdx)(Ue.X2,{key:"ROW3",mdxType:"Row"},(0,a.mdx)(Ue.O,{mdxType:"PropNameCell"},"paddingStyle"),(0,a.mdx)(Ue.Di,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"enum: [\n  'none'\n  'standard'\n  'compact'\n],\n"))),(0,a.mdx)(Ue.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(Ue.mW,{mdxType:"DefaultValueCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"'compact'\n"))),(0,a.mdx)(Ue.Ex,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,"The padding styling to apply to the Time Column Header Cell.\nOne of ",(0,a.mdx)("inlineCode",{parentName:"p"},"'none'"),", ",(0,a.mdx)("inlineCode",{parentName:"p"},"'standard'"),", ",(0,a.mdx)("inlineCode",{parentName:"p"},"'compact'"),"."))),(0,a.mdx)(Ue.X2,{key:"ROW4",mdxType:"Row"},(0,a.mdx)(Ue.O,{mdxType:"PropNameCell"},"hasResultError"),(0,a.mdx)(Ue.Di,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,a.mdx)(Ue.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(Ue.mW,{mdxType:"DefaultValueCell"},(0,a.mdx)("p",null,"none")),(0,a.mdx)(Ue.Ex,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,"Override that shows an Error display. Used when there is a known error or problem when retrieving or assembling the clinical result data."))),(0,a.mdx)(Ue.X2,{key:"ROW5",mdxType:"Row"},(0,a.mdx)(Ue.O,{mdxType:"PropNameCell"},"hasResultNoData"),(0,a.mdx)(Ue.Di,{mdxType:"TypeCell"},(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-javascript"},"bool\n"))),(0,a.mdx)(Ue.dS,{isRequired:!1,mdxType:"RequiredCell"}),(0,a.mdx)(Ue.mW,{mdxType:"DefaultValueCell"},(0,a.mdx)("p",null,"none")),(0,a.mdx)(Ue.Ex,{mdxType:"DescriptionCell"},(0,a.mdx)("p",null,'Override that shows a known "No Data" display. Used when there is known to be no value for a given clinical result concept at a specific datetime.')))))}Le.isMDXComponent=!0;var ze=["components"];function qe(){return qe=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},qe.apply(this,arguments)}function Ae(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var Ke={},Ge="wrapper";function Ye(e){var t=e.components,l=Ae(e,ze);return(0,a.mdx)(Ge,qe({},Ke,l,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)(s.C,{mdxType:"Badge"}),(0,a.mdx)("h1",{id:"terra-clinical-flowsheet-result-cell"},"Terra Clinical Flowsheet Result Cell"),(0,a.mdx)("p",null,"The Clinical Result is a standardized view for single result values added to a Patient's Medical Chart. The flowsheet result cell is specifically for the grid display of a result collection, and can handle displaying an indication of multiple results."),(0,a.mdx)("h2",{id:"getting-started"},"Getting Started"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},"Install with ",(0,a.mdx)("a",{parentName:"li",href:"https://www.npmjs.com/"},"npmjs"),":",(0,a.mdx)("ul",{parentName:"li"},(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("inlineCode",{parentName:"li"},"npm install terra-clinical-result"))))),(0,a.mdx)("h2",{id:"peer-dependencies"},"Peer Dependencies"),(0,a.mdx)("p",null,"This component requires the following peer dependencies be installed in your app for the component to properly function."),(0,a.mdx)("table",null,(0,a.mdx)("thead",{parentName:"table"},(0,a.mdx)("tr",{parentName:"thead"},(0,a.mdx)("th",{parentName:"tr",align:null},"Peer Dependency"),(0,a.mdx)("th",{parentName:"tr",align:null},"Version"))),(0,a.mdx)("tbody",{parentName:"table"},(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"react"),(0,a.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"react-dom"),(0,a.mdx)("td",{parentName:"tr",align:null},"^16.8.5")),(0,a.mdx)("tr",{parentName:"tbody"},(0,a.mdx)("td",{parentName:"tr",align:null},"react-intl"),(0,a.mdx)("td",{parentName:"tr",align:null},"^2.8.0")))),(0,a.mdx)("h2",{id:"usage-guide"},"Usage Guide"),(0,a.mdx)("p",null,"The flowsheet cell for clinical results is constructed by providing the same structured object as the clinical result in an array, allowing for multiple results to be indicated in the same time cell."),(0,a.mdx)("p",null,"Currently the Flowsheet expects an array of one or more results - and if there are multiple, it will display the first in the array, with an indication of additional results. Updates are in progress to also look at the performedDateTime value if provided to evaluate which result is the most recent to appropriately display, regardless of which order index position in the array it is."),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-jsx"},"import { FlowsheetResultCell } from 'terra-clinical-result/lib/index';\n")),(0,a.mdx)("h2",{id:"component-features"},"Component Features"),(0,a.mdx)("ul",null,(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#cross-browser-support"},"Cross-Browser Support")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#responsive-support"},"Responsive Support")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#mobile-support"},"Mobile Support")),(0,a.mdx)("li",{parentName:"ul"},(0,a.mdx)("a",{parentName:"li",href:"https://engineering.cerner.com/terra-ui/about/terra-ui/component-standards#ltr--rtl"},"LTR/RTL Support"))),(0,a.mdx)("h2",{id:"examples"},"Examples"),(0,a.mdx)(p,{title:"Flowsheet Result Cell",mdxType:"DefaultCell"}),(0,a.mdx)(C,{title:"Flowsheet Result Cell with Multiple Results",mdxType:"MultipleResultsCell"}),(0,a.mdx)(D,{title:"Flowsheet Result Cell with Blood Pressure Result",mdxType:"BloodPressureCell"}),(0,a.mdx)(T,{title:"Flowsheet Result Cell with Multiple Blood Pressure Results",mdxType:"MultipleBloodPressuresCell"}),(0,a.mdx)(X,{title:"Flowsheet Result Cell with Unverified Results",mdxType:"UnverifiedResultsCell"}),(0,a.mdx)(G,{title:"Flowsheet Result Cell Padding Styles",mdxType:"PaddingStyleCell"}),(0,a.mdx)(le,{title:"Flowsheet Result Cell for 'Known No Result' and Blood Pressure partial 'No Result'",description:"Use the 'hasResultNoData' prop to show the 'No Data' display for the Flowsheet Result Cell. For Blood Pressure, Use either the 'resultNoData' property name or ' result: { value: null, }' to show the 'No Data' display for either the Systolic or Diastolic result:",mdxType:"KnownAndPartialNoData"}),(0,a.mdx)(ue,{title:"Displays for a full 'Known Error' and for partial missing results",description:"Use the 'hasResultError' prop to show the 'Error' display for the full Flowsheet Result Cell. Or if there is a missing part results (e.g. Systolic or Diastolic), that portion will show the error display:",mdxType:"KnownErrorAndPartialError"}),(0,a.mdx)(ve,{title:"Flowsheet Result Cell with a numeric result that overflows the container",description:"When displaying a result with an overflowed numeric value, instead of truncating the value, shows 'View Results' message.",mdxType:"NumericOverflow"}),(0,a.mdx)(Re,{title:"Uncharted Result as 'Entered In Error'",description:"Display for when the result status has been set to 'entered-in-error'",mdxType:"StatusEnteredInError"}),(0,a.mdx)(Oe,{title:"Flowsheet Result Cell in Semantic Table",mdxType:"SemanticStyleCell"}),(0,a.mdx)(He,{title:"Flowsheet Result Cell Padding Styles in Semantic Table",mdxType:"SemanticPaddingStyleCell"}),(0,a.mdx)("h2",{id:"flowsheet-result-cell-props"},"Flowsheet Result Cell Props"),(0,a.mdx)(Le,{mdxType:"FlowsheetResultCellProps"}))}Ye.isMDXComponent=!0},52636:function(e,t,l){l.d(t,{Z:function(){return u}});l(67294);var n=l(81254),a=["components"];function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},s.apply(this,arguments)}function r(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)l=s[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var o={},i="wrapper";function u(e){var t=e.components,l=r(e,a);return(0,n.mdx)(i,s({},o,l,{components:t,mdxType:"MDXLayout"}),(0,n.mdx)("pre",null,(0,n.mdx)("code",{parentName:"pre",className:"language-scss"},"@import './clinical-lowlight-theme/Examples.module';\n@import './orion-fusion-theme/Examples.module';\n\n:local {\n  .example-description-text {\n    display: inline-flex;\n    margin-bottom: 0.75rem;\n  }\n\n  .dashed-border-group {\n    border: var(--terra-clinical-result-examples-dashed-border-group-border, 2px dashed #333);\n  }\n\n  .clinical-result-fontsize-16 {\n    font-size: 1.14285rem;\n  }\n\n  .clinical-result-fontsize-18 {\n    font-size: 1.28571rem;\n  }\n\n  .clinical-result-fontsize-21 {\n    font-size: 1.5rem;\n  }\n\n  .clinical-result-fontsize-24 {\n    font-size: 1.71428rem;\n  }\n\n  .bottom-space {\n    margin-bottom: 1.42857rem;\n  }\n\n  .mock-flowsheet-example {\n    margin: 0;\n    padding: 0;\n  }\n\n  .mock-flowsheet-header {\n    background-color: var(--terra-clinical-result-examples-mock-flowsheet-header-background-color, #f1f1f1);\n    border: var(--terra-clinical-result-examples-mock-flowsheet-header-border, 1px solid #dedfe0);\n    border-bottom-color: var(--terra-clinical-result-examples-mock-flowsheet-header-border-bottom-color, #868a8c);\n    line-height: 0;\n    max-width: 1055px;\n    overflow: hidden;\n    padding-left: 220px;\n    white-space: nowrap;\n  }\n\n  .mock-flowsheet-header-cell {\n    border-left: var(--terra-clinical-result-examples-mock-flowsheet-header-cell-border-left, 1px solid #868a8c);\n    border-right: var(--terra-clinical-result-examples-mock-flowsheet-header-cell-border-right, 1px solid #868a8c);\n    display: inline-block;\n    margin-right: -1px;\n    width: 120px;\n    \n    &.new-date {\n      border-left: var(--terra-clinical-result-examples-mock-flowsheet-header-cell-new-date-border-left, 2px solid #4e5558);\n    }\n  }\n\n  .mock-flowsheet-firstcolumn {\n    background-color: var(--terra-clinical-result-examples-mock-flowsheet-firstcolumn-background-color, #f1f1f1);\n    border: var(--terra-clinical-result-examples-mock-flowsheet-firstcolumn-border, 1px solid #dedfe0);\n    border-right: var(--terra-clinical-result-examples-mock-flowsheet-firstcolumn-border-right, 2px solid #4e5558);\n    max-width: 222px;\n    overflow: hidden;\n    padding-top: 48px;\n    white-space: nowrap;\n  }\n\n  .mock-flowsheet-firstcolumn-cell {\n    border-bottom: var(--terra-clinical-result-examples-mock-flowsheet-firstcolumn-cell-border-bottom, 1px solid #868a8c);\n    border-top: var(--terra-clinical-result-examples-mock-flowsheet-firstcolumn-cell-border-top, 1px solid #868a8c);\n    margin-bottom: -1px;\n\n    &.zebra {\n      background-color: var(--terra-clinical-result-examples-mock-flowsheet-firstcolumn-cell-zebra-background-color, #dedfe0);\n    }\n  }\n\n  .mock-flowsheet-resultcolumn {\n    background-color: var(--terra-clinical-result-examples-mock-flowsheet-resultcolumn-background-color, #f1f1f1);\n    border: var(--terra-clinical-result-examples-mock-flowsheet-resultcolumn-border, 1px solid #dedfe0);\n    display: inline-block;\n    margin-left: -1px;\n    overflow: hidden;\n    padding-top: 24px;\n    vertical-align: top;\n    width: 162px;\n\n    &.half-column {\n      width: 99px;\n    }\n\n    &.double-column {\n      width: 324px;\n    }\n\n    &.triple-column {\n      width: 490px;\n    }\n\n    &.flexible50-column {\n      width: 50%;\n    }\n  }\n\n  .mock-flowsheet-resultcolumn-cell {\n    background-color: var(--terra-clinical-result-examples-mock-flowsheet-resultcolumn-cell-background-color, #fff);\n    border-bottom: var(--terra-clinical-result-examples-mock-flowsheet-resultcolumn-cell-border-bottom, 1px solid #dedfe0);\n    border-top: var(--terra-clinical-result-examples-mock-flowsheet-resultcolumn-cell-border-top, 1px solid #dedfe0);\n    box-sizing: border-box;\n    height: 33px;\n    margin-bottom: -1px;\n    white-space: nowrap;\n\n    &.allow-wrapping {\n      overflow: auto;\n      white-space: normal;\n      word-wrap: normal;\n    }  \n\n    &.empty {\n      height: 33px;\n    }\n\n    &.short {\n      height: 25px;\n    }\n\n    &.medium {\n      height: 41px;\n    }\n\n    &.tall {\n      height: 155px;\n    }\n\n    &.with-padding {\n      padding: 7px 7px 0;\n    }\n    \n    &.zebra {\n      background-color: var(--terra-clinical-result-examples-mock-flowsheet-resultcolumn-cell-zebra-background-color, #f1f1f1);\n    }\n  }\n\n  .vertical-center-align-wrapper {\n    align-items: center;\n    display: flex;\n    height: 100%;\n    margin: 0;\n    max-height: 100%;\n    max-width: 100%;  // Needed for IE10 truncation\n    overflow: hidden; // Needed for IE10\n    padding: 0;\n    width: 100%;\n  }\n}\n\n")))}u.isMDXComponent=!0},61042:function(e,t,l){l.d(t,{C:function(){return s}});var n=l(67294),a=l(22863),s=function(e){var t=e.url;return n.createElement(a.Z,{src:"https://github.com/cerner/terra-clinical/tree/main/packages/terra-clinical-result",name:"terra-clinical-result",version:"1.20.0",url:t})}},92452:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{id:"111",systolic:{eventId:"111.1",result:{value:"111",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"}}}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])}),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})))}},62086:function(e,t,l){t.Z=void 0;var n,a=(n=l(67294))&&n.__esModule?n:{default:n},s=l(21860);var r=[{eventId:"111",result:{value:"12345.678",unit:"mL"},isModified:!0,hasComment:!0}];t.Z=function(){return a.default.createElement(s.FlowsheetResultCell,{resultDataSet:r})}},72538:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{id:"111",systolic:{eventId:"111.1",resultNoData:!0},diastolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],d=[{id:"222",systolic:{eventId:"222.1",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"222.2",resultNoData:!0}}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{hasResultNoData:!0}))),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0}))),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:d,hideUnit:!0}))))}},93429:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{id:"111",diastolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],d=[{id:"222",systolic:{eventId:"222.1",result:{value:"140",unit:"mmHg"},interpretation:"high"}}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{hasResultError:!0}))),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0}))),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:d,hideUnit:!0}))))}},96612:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{id:"1602328271-1",systolic:{eventId:"1602328271-1.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-1.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-2",systolic:{eventId:"1602328271-2.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-2.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-3",systolic:{eventId:"1602328271-3.1",result:{value:"111",unit:"mmHg"},isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-3.2",result:{value:"77",unit:"mmHg"},isModified:!0,hasComment:!0}}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])}),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})))}},59763:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])}),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})))}},79314:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{eventId:"1602328271",result:{value:"101.123456789123456789123456789123456789123456789",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0}))),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn","half-column"])},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0}))),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn","triple-column"])},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0}))))}},14211:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{id:"1602328271-1",systolic:{eventId:"1602328271-1.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-1.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-2",systolic:{eventId:"1602328271-2.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-2.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-3",systolic:{eventId:"1602328271-3.1",result:{value:"111",unit:"mmHg"},isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-3.2",result:{value:"77",unit:"mmHg"},isModified:!0,hasComment:!0}}],d=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isUnverified:!0}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","short"])},"none"),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","with-padding"])},"compact"),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","with-padding","medium"])},"standard")),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","short"])},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0,paddingStyle:"none"})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0,paddingStyle:"compact"})),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","medium"])},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0,paddingStyle:"standard"}))),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","short"])},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:d,hideUnit:!0,paddingStyle:"none"})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:d,hideUnit:!0,paddingStyle:"compact"})),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","medium"])},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:d,hideUnit:!0,paddingStyle:"standard"}))))}},90296:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.Z=void 0;var a,s=(a=l(67294))&&a.__esModule?a:{default:a},r=l(21860),o=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var a={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var o=s?Object.getOwnPropertyDescriptor(e,r):null;o&&(o.get||o.set)?Object.defineProperty(a,r,o):a[r]=e[r]}a.default=e,l&&l.set(e,a);return a}(l(98364));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}var u=[{id:"1602328271-1",systolic:{eventId:"1602328271-1.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-1.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-2",systolic:{eventId:"1602328271-2.1",result:{value:"111",unit:"mmHg"},interpretation:"high",isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-2.2",result:{value:"77",unit:"mmHg"},interpretation:"low",isModified:!0,hasComment:!0}},{id:"1602328271-3",systolic:{eventId:"1602328271-3.1",result:{value:"111",unit:"mmHg"},isModified:!0,hasComment:!0},diastolic:{eventId:"1602328271-3.2",result:{value:"77",unit:"mmHg"},isModified:!0,hasComment:!0}}],m=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isUnverified:!0}];t.Z=function(){return s.default.createElement(o.default,null,s.default.createElement(o.Header,null,s.default.createElement(r.ResultNameHeaderCell,{key:"padding",resultName:"Padding Type"}),s.default.createElement(r.ResultNameHeaderCell,{key:"bp",resultName:"Blood Pressure Result"}),s.default.createElement(r.ResultNameHeaderCell,{key:"temp",resultName:"Unverified Temperature Result"})),s.default.createElement(o.Body,null,s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"padding",resultDataSet:[{id:1,result:{value:"None"}}],paddingStyle:"none"}),s.default.createElement(r.FlowsheetResultCell,{key:"bp",resultDataSet:u,hideUnit:!0,paddingStyle:"none"}),s.default.createElement(r.FlowsheetResultCell,{key:"temp",resultDataSet:m,hideUnit:!0,paddingStyle:"none"})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"padding",resultDataSet:[{id:3,result:{value:"Compact"}}],paddingStyle:"compact"}),s.default.createElement(r.FlowsheetResultCell,{key:"bp",resultDataSet:u,hideUnit:!0,paddingStyle:"compact"}),s.default.createElement(r.FlowsheetResultCell,{key:"temp",resultDataSet:m,hideUnit:!0,paddingStyle:"compact"})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"padding",resultDataSet:[{id:5,result:{value:"Standard"}}],paddingStyle:"standard"}),s.default.createElement(r.FlowsheetResultCell,{key:"bp",resultDataSet:u,hideUnit:!0,paddingStyle:"standard"}),s.default.createElement(r.FlowsheetResultCell,{key:"temp",resultDataSet:m,hideUnit:!0,paddingStyle:"standard"}))))}},67479:function(e,t,l){function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}t.Z=void 0;var a,s=(a=l(67294))&&a.__esModule?a:{default:a},r=l(21860),o=function(e,t){if(!t&&e&&e.__esModule)return e;if(null===e||"object"!==n(e)&&"function"!=typeof e)return{default:e};var l=i(t);if(l&&l.has(e))return l.get(e);var a={},s=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if("default"!==r&&Object.prototype.hasOwnProperty.call(e,r)){var o=s?Object.getOwnPropertyDescriptor(e,r):null;o&&(o.get||o.set)?Object.defineProperty(a,r,o):a[r]=e[r]}a.default=e,l&&l.set(e,a);return a}(l(98364));function i(e){if("function"!=typeof WeakMap)return null;var t=new WeakMap,l=new WeakMap;return(i=function(e){return e?l:t})(e)}var u=[{id:"1",systolic:{eventId:"2",result:{value:"130",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"3",result:{value:"80",unit:"mmHg"}}}],m=[{id:"4",systolic:{eventId:"5",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"6",result:{value:"77",unit:"mmHg"},interpretation:"critical"}},{id:"7",systolic:{eventId:"8",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"9",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],c=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}],d=[{eventId:"1602328271",result:{value:"10111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011101110111011",unit:"degC"},isNumeric:!0,isModified:!0,hasComment:!0},{eventId:"1602328282",result:{value:"101.2",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1},{eventId:"1602328293",result:{value:"101.3",unit:"degC"},isNumeric:!0,isModified:!1,hasComment:!1}],p=[{id:"10",systolic:{eventId:"11",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"12",result:{value:"77",unit:"mmHg"},interpretation:"critical",isUnverified:!1,isModified:!0,hasComment:!0}},{id:"13",systolic:{eventId:"14",result:{value:"140",unit:"mmHg"},interpretation:"high"},diastolic:{eventId:"15",result:{value:"77",unit:"mmHg"},interpretation:"critical",isUnverified:!0}}],f=[{id:"16",systolic:{eventId:"17",result:{value:"85",unit:"mmHg"},interpretation:"low"},diastolic:{eventId:"18",result:{value:"77",unit:"mmHg"},isUnverified:!1,isModified:!0,hasComment:!0}}],h=[{id:"19",systolic:{eventId:"20",resultNoData:!0},diastolic:{eventId:"21",result:{value:"85",unit:"mmHg"}}}],v=[{id:"22",systolic:{eventId:"23",result:{value:"170",unit:"mmHg"},interpretation:"critical"},diastolic:{eventId:"24",resultNoData:!0}}],w=[{id:"111",systolic:{eventId:"111.2",result:{value:"77",unit:"mmHg"},interpretation:"critical"}}],y=[{id:"25",systolic:{eventId:"26",result:{value:"140",unit:"mmHg"},interpretation:"high",isUnverified:!0},diastolic:{eventId:"27",result:{value:"77",unit:"mmHg"},interpretation:"critical",isUnverified:!0}}],x=[{id:"1577836800",result:{value:"12345.678",unit:"mL"},status:"entered-in-error"},{id:"1577836911",result:{value:"12345.678",unit:"mL"}}];t.Z=function(){return s.default.createElement(o.default,null,s.default.createElement(o.Header,null,s.default.createElement(r.ResultNameHeaderCell,{key:"notes",resultName:"Notes"}),s.default.createElement(r.ResultNameHeaderCell,{key:"result",resultName:"Clinical Results"}),s.default.createElement(r.ResultNameHeaderCell,{key:"date",resultName:"Date"})),s.default.createElement(o.Body,null,s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:1,result:{value:"Standard Result (With Unit)"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:u}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:2,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:3,result:{value:"Multiple Results"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:m,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:4,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:5,result:{value:"Multiple Decorated Results"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:p,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:6,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:7,result:{value:"Decorated Result"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:f,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:8,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:9,result:{value:"Partial Result, Diastolic"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:v,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:10,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:11,result:{value:"Partial Result, Systolic"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:h,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:12,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:13,result:{value:"Unverified Result"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:y,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:14,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:15,result:{value:"No Data Result"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",hasResultNoData:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:16,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:23,result:{value:"Numeric Without Overflow"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:c}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:24,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:25,result:{value:"Numeric With Overflow"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:d}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:26,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:21,result:{value:"Entered-in-error Result"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:x}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:22,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:17,result:{value:"Error Result"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",hasResultError:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:18,result:{value:"May 12th"}}]})),s.default.createElement(o.Row,null,s.default.createElement(r.FlowsheetResultCell,{key:"notes",resultDataSet:[{id:19,result:{value:"Partial Error Result"}}]}),s.default.createElement(r.FlowsheetResultCell,{key:"result",resultDataSet:w,hideUnit:!0}),s.default.createElement(r.FlowsheetResultCell,{key:"date",resultDataSet:[{id:20,result:{value:"May 12th"}}]}))))}},63216:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function c(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function d(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?c(Object(l),!0).forEach((function(t){p(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):c(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function p(e,t,l){return(t=function(e){var t=function(e,t){if("object"!==m(e)||null===e)return e;var l=e[Symbol.toPrimitive];if(void 0!==l){var n=l.call(e,t||"default");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===m(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}var f=r.default.bind(i.default),h={result:{value:"12345.678",unit:"mL"}},v={eventId:"1602328271.1",result:{value:"120",unit:"mmHg"}},w={eventId:"1602328271.2",result:{value:"80",unit:"mmHg"}},y=[d(d({eventId:"1577836800"},h),{},{status:"entered-in-error"}),d({eventId:"1577836911"},h)],x=[{id:"111",systolic:d(d({},v),{},{status:"entered-in-error"}),diastolic:d({},w)},{id:"112",systolic:d({},v),diastolic:d({},w)}],g=[{id:"211",systolic:d(d({},v),{},{status:"entered-in-error"}),diastolic:d(d({},w),{},{status:"entered-in-error"})},{id:"212",systolic:d({},v),diastolic:d({},w)}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(f("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:f(["mock-flowsheet-resultcolumn","double-column"])},n.default.createElement("div",{className:f(["mock-flowsheet-resultcolumn-cell","with-padding"])},"standard result"),n.default.createElement("div",{className:f(["mock-flowsheet-resultcolumn-cell","wide","with-padding"])},"blood pressure: systolic-only"),n.default.createElement("div",{className:f(["mock-flowsheet-resultcolumn-cell","wide","with-padding"])},"blood pressure: both systolic & diastolic")),n.default.createElement("div",{className:f("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:f("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:y,hideUnit:!0})),n.default.createElement("div",{className:f("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:x,hideUnit:!0})),n.default.createElement("div",{className:f("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:g,hideUnit:!0}))))}},71924:function(e,t,l){t.Z=void 0;var n=u(l(67294)),a=l(21860),s=u(l(94184)),r=u(l(47166)),o=u(l(50026)),i=u(l(60815));function u(e){return e&&e.__esModule?e:{default:e}}var m=r.default.bind(i.default),c=[{eventId:"1602328271",result:{value:"101.1",unit:"degC"},interpretation:"critical",isUnverified:!0}];t.Z=function(){var e=n.default.useContext(o.default),t=(0,s.default)(m("mock-flowsheet-example",e.className));return n.default.createElement("div",{className:t},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn-cell")},n.default.createElement(a.FlowsheetResultCell,{resultDataSet:c,hideUnit:!0})),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})),n.default.createElement("div",{className:m("mock-flowsheet-resultcolumn")},n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])}),n.default.createElement("div",{className:m(["mock-flowsheet-resultcolumn-cell","empty"])})))}},53560:function(e,t,l){l.r(t),t.default={"clinical-lowlight-theme":"ExampleTemplate-module__clinical-lowlight-theme___rBbtD","orion-fusion-theme":"ExampleTemplate-module__orion-fusion-theme___GzA23",template:"ExampleTemplate-module__template___a4uPk",header:"ExampleTemplate-module__header___iFXV3",content:"ExampleTemplate-module__content___48m4Q",description:"ExampleTemplate-module__description___NwBJo",footer:"ExampleTemplate-module__footer___GpSoG","button-container":"ExampleTemplate-module__button-container___rAD11",css:"ExampleTemplate-module__css___+jtk1",code:"ExampleTemplate-module__code___7rC6C","css-toggle":"ExampleTemplate-module__css-toggle___chHK7","code-toggle":"ExampleTemplate-module__code-toggle___TGlE-","is-selected":"ExampleTemplate-module__is-selected___0BYwS",item:"ExampleTemplate-module__item___8FTQq",chevron:"ExampleTemplate-module__chevron___VbY7N",title:"ExampleTemplate-module__title___r+nbJ","dynamic-content":"ExampleTemplate-module__dynamic-content___k+1H7"}},60815:function(e,t,l){l.r(t),t.default={"clinical-lowlight-theme":"Examples-module__clinical-lowlight-theme___raZXs","orion-fusion-theme":"Examples-module__orion-fusion-theme___Pm6k9","example-description-text":"Examples-module__example-description-text___Xq-WD","dashed-border-group":"Examples-module__dashed-border-group___7SN-x","clinical-result-fontsize-16":"Examples-module__clinical-result-fontsize-16___u9JnA","clinical-result-fontsize-18":"Examples-module__clinical-result-fontsize-18___rluGp","clinical-result-fontsize-21":"Examples-module__clinical-result-fontsize-21___cxLuH","clinical-result-fontsize-24":"Examples-module__clinical-result-fontsize-24___B5x8X","bottom-space":"Examples-module__bottom-space___xH0Ub","mock-flowsheet-example":"Examples-module__mock-flowsheet-example___HHOIv","mock-flowsheet-header":"Examples-module__mock-flowsheet-header___NyDYg","mock-flowsheet-header-cell":"Examples-module__mock-flowsheet-header-cell___EwoKe","new-date":"Examples-module__new-date___k3n84","mock-flowsheet-firstcolumn":"Examples-module__mock-flowsheet-firstcolumn___HUI8Y","mock-flowsheet-firstcolumn-cell":"Examples-module__mock-flowsheet-firstcolumn-cell___nq+xg",zebra:"Examples-module__zebra___oEmkn","mock-flowsheet-resultcolumn":"Examples-module__mock-flowsheet-resultcolumn___7jQOo","half-column":"Examples-module__half-column___gtHm3","double-column":"Examples-module__double-column___H635r","triple-column":"Examples-module__triple-column___wCTfe","flexible50-column":"Examples-module__flexible50-column___9d4Ht","mock-flowsheet-resultcolumn-cell":"Examples-module__mock-flowsheet-resultcolumn-cell___PIXFo","allow-wrapping":"Examples-module__allow-wrapping___P3M2v",empty:"Examples-module__empty___-PH0H",short:"Examples-module__short___JsBsC",medium:"Examples-module__medium___Ty0Ey",tall:"Examples-module__tall___idfpx","with-padding":"Examples-module__with-padding___BTyqD","vertical-center-align-wrapper":"Examples-module__vertical-center-align-wrapper___VFCEp"}},33864:function(e,t,l){Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=s(l(67294)),a=s(l(99139));function s(e){return e&&e.__esModule?e:{default:e}}function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var l=arguments[t];for(var n in l)Object.prototype.hasOwnProperty.call(l,n)&&(e[n]=l[n])}return e},r.apply(this,arguments)}var o=function(e){var t=r({},e);return n.default.createElement(a.default,t,n.default.createElement("path",{d:"M10.3 24L33.8 0l3.9 3.8L18 24l19.7 20.2-3.9 3.8z"}))};o.displayName="IconChevronLeft",o.defaultProps={className:"",viewBox:"0 0 48 48",xmlns:"http://www.w3.org/2000/svg","data-name":"Layer 1",isBidi:!0};var i=o;t.default=i}}]);
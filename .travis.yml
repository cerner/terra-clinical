language: generic
sudo: required
services:
  - docker
branches:
  only:
    - master
cache:
  directories:
    - $HOME/$TRAVIS_BUILD_ID
    - $HOME/docker
env:
  global:
    - DOCKER_IMAGE='cerner/terra-clinical'
    - TAG="${TRAVIS_PULL_REQUEST_SHA:=latest}"
before_install:
  - sudo chown -R travis:travis $HOME/docker
  # Load cached docker images
  - if [[ -d $HOME/docker ]]; then ls $HOME/docker/*.tar.gz | xargs -I {file} sh -c "zcat {file} | docker load"; fi
before_cache:
  - sudo chown -R travis:travis $HOME/docker
  - if [ $TRAVIS_TEST_RESULT == 1 ]; then rm -f $HOME/docker/*.tar.gz; fi
jobs:
  include:
    - stage: build
      before_install: true
      script:
        - sudo chown -R travis:travis $HOME/docker
        - 'rm -f $HOME/docker/*.tar.gz'
        - travis_wait docker-compose build test-ci
        - travis_wait docker-compose --verbose pull standalone-chrome
        - >
          mkdir -p $HOME/docker && docker images -a --filter='dangling=false' --format '{{.Repository}}:{{.Tag}} {{.ID}}'
          | xargs -n 2 -t sh -c 'test -e $HOME/docker/$1.tar.gz || docker save $0 | gzip -2 > $HOME/docker/$1.tar.gz'
    - stage: danger lint and jest
      script: "travis_wait docker-compose run -e DANGER_GITHUB_API_TOKEN=$DANGER_GITHUB_API_TOKEN -e TRAVIS=$TRAVIS -e CI=$CI -e HAS_JOSH_K_SEAL_OF_APPROVAL=$HAS_JOSH_K_SEAL_OF_APPROVAL -e TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST -e TRAVIS_REPO_SLUG=$TRAVIS_REPO_SLUG test-ci bash -c 'npm run danger && npm run lint && npm run jest'"
    - stage: compile - default theme
      script: travis_wait docker-compose run test-ci npm run compile:prod
    - stage: wdio - default theme
      name: tiny
      script: travis_wait docker-compose run test-ci npm run wdio-default -- --formFactors ['tiny']
    - script: travis_wait docker-compose run test-ci npm run wdio-default -- --formFactors ['small']
      name: small
    - script: travis_wait docker-compose run test-ci npm run wdio-default -- --formFactors ['medium']
      name: medium
    - script: travis_wait docker-compose run test-ci npm run wdio-default -- --formFactors ['large']
      name: large
    - script: travis_wait docker-compose run test-ci npm run wdio-default -- --formFactors ['enormous']
      name: enormous
    - stage: compile - fusion theme
      script: travis_wait docker-compose run test-ci npm run compile:fusion
    - stage: wdio - fusion theme
      name: tiny
      script: travis_wait docker-compose run test-ci npm run wdio-fusion -- --formFactors ['tiny']
    - script: travis_wait docker-compose run test-ci npm run wdio-fusion -- --formFactors ['small']
      name: small
    - script: travis_wait docker-compose run test-ci npm run wdio-fusion -- --formFactors ['medium']
      name: medium
    - script: travis_wait docker-compose run test-ci npm run wdio-fusion -- --formFactors ['large']
      name: large
    - script: travis_wait docker-compose run test-ci npm run wdio-fusion -- --formFactors ['enormous']
      name: enormous
    - stage: clean up cache
      before_install: true
      script:
        - sudo chown -R travis:travis $HOME/docker
        - 'rm -f $HOME/docker/*.tar.gz'

stages:
  - build
  - danger lint and jest
  - compile - default theme
  - wdio - default theme
  - compile - fusion theme
  - wdio - fusion theme
  - clean up cache

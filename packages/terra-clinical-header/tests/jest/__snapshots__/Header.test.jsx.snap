// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a default component 1`] = `
<header
  className="flex-header"
/>
`;

exports[`should render a header with all content 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-end"
  >
    <div
      id="start-id"
    >
      start content
    </div>
  </div>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
      >
        Title
      </h1>
    </div>
  </div>
  <div
    className="flex-end end-content"
  >
    <div
      id="end-id"
    >
      end content
    </div>
  </div>
</header>
`;

exports[`should render a header with content on the left 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-end"
  >
    <div
      id="start-id"
    >
      start content
    </div>
  </div>
</header>
`;

exports[`should render a header with content on the right 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-end end-content"
  >
    <div
      id="end-id"
    >
      end content
    </div>
  </div>
</header>
`;

exports[`should render a header with default heading level when level not set 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
      >
        This title should render with a default level
      </h1>
    </div>
  </div>
</header>
`;

exports[`should render a header with heading level 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h2
        className="title"
      >
        title
      </h2>
    </div>
  </div>
</header>
`;

exports[`should render a header with hyperlink title 1`] = `
<header
  className="flex-header"
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": null,
      "now": [Function],
      "onError": [Function],
      "textComponent": "span",
      "timeZone": null,
    }
  }
>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
      >
        <InjectIntl(Hyperlink)
          onClick={[MockFunction]}
          text="Title"
        />
      </h1>
    </div>
  </div>
</header>
`;

exports[`should render a header with id 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
        id="test-id"
      >
        title
      </h1>
    </div>
  </div>
</header>
`;

exports[`should render a header with start and end content and no title 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-end"
  >
    <div
      id="start-id"
    >
      start content
    </div>
  </div>
  <div
    className="flex-end end-content"
  >
    <div
      id="end-id"
    >
      end content
    </div>
  </div>
</header>
`;

exports[`should render a header with title 1`] = `
<header
  className="flex-header"
>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
      >
        title
      </h1>
    </div>
  </div>
</header>
`;

exports[`should render a subheader with all content 1`] = `
<header
  className="flex-header subheader"
>
  <div
    className="flex-end"
  >
    <div>
      start content
    </div>
  </div>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
      >
        Title
      </h1>
    </div>
  </div>
  <div
    className="flex-end end-content"
  >
    <div>
      end content
    </div>
  </div>
</header>
`;

exports[`should render a subheader with title and heading level 1`] = `
<header
  className="flex-header subheader"
>
  <div
    className="flex-fill"
  >
    <div
      className="title-container"
    >
      <h1
        className="title"
      >
        title
      </h1>
    </div>
  </div>
</header>
`;
